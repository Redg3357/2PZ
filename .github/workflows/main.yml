name: CI
on:
  push:
    branches:
    - main
    - development
  
  pull_request:
    branches:
    - main

jobs:
    test_job:
        runs-on: windows-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          
          - name: setup-msbuild  
            uses: microsoft/setup-msbuild@v2
                     
          - name: Build solution
            run: msbuild 2PZ.sln -target:2PZ,2PZTEST  
          #- name: Check MSBuild version
          -  run:  ./x64/Release/2PZTEST.exe
          
          - name: Create and merge pull request
            if: success()
            env:
              GH_TOKEN: ${{ secrets.TOKEN }}
            run: |
              # Set variables
              $BASE_BRANCH = "main"
              $HEAD_BRANCH = "development"
              $PR_TITLE = "Auto-merge from development to main"
              $PR_BODY = "This pull request was automatically created and merged by GitHub Actions."

              # Create pull request
              $PR_RESPONSE = Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/pulls" `
                -Method POST `
                -Headers @{ Authorization = "token $env:GH_TOKEN"; Accept = "application/vnd.github.v3+json" } `
                -Body (ConvertTo-Json -Depth 10 -Compress @{
                    title = $PR_TITLE
                    body = $PR_BODY
                    head = $HEAD_BRANCH
                    base = $BASE_BRANCH
                })

              # Extract pull request number
              $PR_NUMBER = $PR_RESPONSE.number

              # Merge pull request
              Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" `
                -Method PUT `
                -Headers @{ Authorization = "token $env:GH_TOKEN"; Accept = "application/vnd.github.v3+json" } `
                -Body (ConvertTo-Json -Depth 10 -Compress @{ merge_method = "merge" })